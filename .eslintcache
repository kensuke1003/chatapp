[{"/Users/kensukeasano/codevillage/chatapp/src/index.jsx":"1","/Users/kensukeasano/codevillage/chatapp/src/App.jsx":"2","/Users/kensukeasano/codevillage/chatapp/src/Pages/Login.jsx":"3","/Users/kensukeasano/codevillage/chatapp/src/Pages/Room.jsx":"4","/Users/kensukeasano/codevillage/chatapp/src/components/LoggedinRoute.jsx":"5","/Users/kensukeasano/codevillage/chatapp/src/Pages/Signup.jsx":"6","/Users/kensukeasano/codevillage/chatapp/src/context/AuthContext.jsx":"7","/Users/kensukeasano/codevillage/chatapp/src/config/firebase.js":"8"},{"size":129,"mtime":1610457093461,"results":"9","hashOfConfig":"10"},{"size":1226,"mtime":1610457115166,"results":"11","hashOfConfig":"10"},{"size":2157,"mtime":1610457522928,"results":"12","hashOfConfig":"10"},{"size":2816,"mtime":1610539749702,"results":"13","hashOfConfig":"10"},{"size":995,"mtime":1610457485857,"results":"14","hashOfConfig":"10"},{"size":3082,"mtime":1610540126529,"results":"15","hashOfConfig":"10"},{"size":2846,"mtime":1610457493778,"results":"16","hashOfConfig":"10"},{"size":896,"mtime":1610539234216,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ehy3q6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/kensukeasano/codevillage/chatapp/src/index.jsx",[],["38","39"],"/Users/kensukeasano/codevillage/chatapp/src/App.jsx",[],"/Users/kensukeasano/codevillage/chatapp/src/Pages/Login.jsx",[],"/Users/kensukeasano/codevillage/chatapp/src/Pages/Room.jsx",[],"/Users/kensukeasano/codevillage/chatapp/src/components/LoggedinRoute.jsx",["40"],"import { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\n\nconst LoggedinRoute = ({ component: Component, ...otherProps }) => { //最初のはcomponentにしてComponentを受け取っている\n\n    const user = useContext(AuthContext);  //ログインしているuserの情報を取得している AuthContext.jsxより\n    console.log(otherProps);\n\n    //userのログイン状態によってページの遷移先を分けている\n    if (!user) {                                              //userではなかった場合の条件分け\n        return <Redirect to='/login' />;\n    }\n    return <Route {...otherProps} component={Component} />;  //以下と同じ\n\n    /*return (\n        <Route\n            {...otherProps}\n            render={(props) =>\n                user ? <Component {...props} /> : <Redirect to='login' />\n            }\n        />\n    );*/\n};\n\nexport default LoggedinRoute;","/Users/kensukeasano/codevillage/chatapp/src/Pages/Signup.jsx",[],"/Users/kensukeasano/codevillage/chatapp/src/context/AuthContext.jsx",["41","42"],"import { createContext, useState, useEffect } from \"react\";\nimport { auth } from '../config/firebase';\nexport const AuthContext = createContext(null);\n\n//Reactのコンポーネント↓\nconst AuthProvider = ({ children }) => {\n    //const user = \"こんにちは\"\n    const [user, setUser] = useState(null);　//壱行上のuserはグローバルステートでどのコンポ―ネントとでも使用可\n    //なので、userをstateで管理すればよい　\n    const [isLoading, setLoading] = useState(true);\n    console.log('ロード状態,isLoading')\n    useEffect(() => {\n        auth.onAuthStateChanged((authUser) => {\n            //console.log(\"じっこうされたようの\", authUser)      ログインされたときに表示される\n\n\n            setUser(authUser);\n        });\n    }, []);\n    //console.log(user);\n\n    return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>\n}\n\n\n\n\n\n//valueに入るものがグローバルステート　すなわちこれはどこからでもアクセスできる\n//valueのこんにちはがどこからでもアクセス可能な変数になった(props) 渡す準備完了\n\n//onなんちゃら関数は中身に設定されたものが何らかのきっかけが起きたら実行される  \n//onAuthStateChanged関数の引数にはユーザーの情報が入る\nexport default AuthProvider;\n\n//useEffectはタイミングを調整する関数,副作用(===通信)を緩和するhooks\n    //第一引数：調整されたタイミングで実行されたコールバック関数\n    // =＞return内のjsxがDOMに反映された後（レンダーされた後,つまりhtmlに反映された後)に1回実行される（最初の一回だけ実行）\n    // =＞依存配列内(第二引数)の変数の値が変更されるたびに実行される\n\n    //第二引数：依存配列(依存配列内の変数の値が変わるたびに第一引数のコールバック関数が実行される)\n\n\n//onなんちゃら関数は中身に設定されたものが何らかのきっかけが起きたら実行される   ex)onclickはクリックされたときに、onsubmitはフォームが送信されたときに、\n//onAuthStateChanged関数の引数にはユーザーの情報が入る\n\n//onAuthStateChanged関数はユーザーのログイン状態の変更を監視する,ログインしているユーザーの情報をgetできる　ログイン、ログアウトを監視するs\n//　　　=＞ログイン状態の変更（2回目以降）\n// 　　 =＞onAuthStateChanged関数が実行されたとき（最初の1回目だけ）\n\n//コンポーネントの開始タグと閉じタグに囲まれた物はchildrenになる\n//providerコンポーネントのchildrenになった物はすべてvalueを使える\n\n\n//useEffectの基本形　useEfect=(()=>{},[]);","/Users/kensukeasano/codevillage/chatapp/src/config/firebase.js",[],["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":10,"column":12,"nodeType":"51","messageId":"52","endLine":10,"endColumn":21},{"ruleId":"49","severity":1,"message":"54","line":10,"column":23,"nodeType":"51","messageId":"52","endLine":10,"endColumn":33},{"ruleId":"45","replacedBy":"55"},{"ruleId":"47","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["57"],["58"],"no-global-assign","no-unsafe-negation"]